name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
    tags:
      - 'v*'

jobs:

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, openbsd-latest, raspberrypi-latest, ios-latest, android-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: openbsd-latest
            target: x86_64-unknown-openbsd
          - os: raspberrypi-latest
            target: armv7-unknown-linux-gnueabihf
          - os: ios-latest
            target: aarch64-apple-ios
          - os: android-latest
            target: aarch64-linux-android

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    - name: Package
      run: |
        mkdir -p release
        cp target/${{ matrix.target }}/release/jfetch release/
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          7z a release/jfetch-${{ matrix.target }}.zip release/jfetch.exe
        else
          tar -czf release/jfetch-${{ matrix.target }}.tar.gz release/jfetch
        fi
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          release/jfetch-${{ matrix.target }}.*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
